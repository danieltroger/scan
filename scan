#!/usr/bin/env php
<?php
if(strlen($argv[1]) < 1) die("No filename specified.\n");
if($argv[1] == "-h" || $argv[1] == "--help") die("Usage: {$argv[0]} <filename> [<Jpeg/Pdf> <DPI> <contrast> <brightness> <Gray/Color> <compression>]\n");
 //<filname ><DPI> <contrast> <brightness>
 if(strlen($argv[2]) > 1)
 {
   define("ftype",$argv[2]);
   if($argv[2] == "Pdf") define("ctype","Document");
   if($argv[2] == "Jpeg") define("ctype","Photo");
 }
 else
 {
   define("ftype","Jpeg");
   define("ctype","Photo");
 }
if(strlen($argv[3]) > 1)
{
  define("DPI",$argv[3]);
}
else
{
  define("DPI",300);
}
if(strlen($argv[4]) > 1)
{
  define("contrast",$argv[4]);
}
else
{
  define("contrast",1000);
}
if(strlen($argv[5]) > 1)
{
  define("brightness",$argv[5]);
}
else
{
  define("brightness",1000);
}
if(strlen($argv[6]) > 1)
{
  define("color",$argv[6]);
}
else
{
  define("color","Color");
}
if(strlen($argv[7]) > 1)
{
  define("compression",$argv[7]);
}
else
{
  define("compression",100);
}
define("opts","<scan:ScanJob xmlns:scan=\"http://www.hp.com/schemas/imaging/con/cnx/scan/2008/08/19\" xmlns:dd=\"http://www.hp.com/schemas/imaging/con/dictionaries/1.0/\">
<scan:XResolution>" . DPI ."</scan:XResolution>
<scan:YResolution>" . DPI ."</scan:YResolution>
<scan:XStart>0</scan:XStart>
<scan:YStart>0</scan:YStart>
<scan:Width>2480</scan:Width>
<scan:Height>3508</scan:Height>
<scan:Format>" . ftype . "</scan:Format>
<scan:CompressionQFactor>" . compression . "</scan:CompressionQFactor>
<scan:ColorSpace>" . color . "</scan:ColorSpace>
<scan:BitDepth>8</scan:BitDepth>
<scan:InputSource>Platen</scan:InputSource>
<scan:GrayRendering>NTSC</scan:GrayRendering>
<scan:ToneMap>
<scan:Gamma>1000</scan:Gamma>
<scan:Brightness>" . brightness . "</scan:Brightness>
<scan:Contrast>" . contrast . "</scan:Contrast>
<scan:Highlite>179</scan:Highlite>
<scan:Shadow>25</scan:Shadow>
</scan:ToneMap>
<scan:ContentType>" . ctype . "</scan:ContentType>
</scan:ScanJob>");
define("ip","http://192.168.178.22");
scan($argv[1]);
function scan($fname)
{
 if(busy()) die("Scanner busy\n");
 $resp = post(ip . "/Scan/Jobs",opts,true,true,false);
 $lines = explode("\n",$resp);
 foreach($lines as $line)
 {
   $splt = explode(":",$line);
   if($splt[0] == "Location")
   {
     unset($splt[0]);
     $joburl = substr(implode(":",$splt),1);
   }
 }
 echo "Started job, URL: {$joburl}\n";
 dlj($joburl,$fname);
}
function stdin()
{
  $handle = fopen ("php://stdin","r");
  $text = strtolower(str_replace("\n","",fgets($handle)));
  fclose($handle);
  return $text;
}
function dlj($joburl,$fname)
{
  $status = "";
  while($status != "ReadyToUpload")
  {
   $jr = simplexml_load_string(post($joburl,NULL,false));
   $dlurl = $jr->ScanJob->PreScanPage->BinaryURL;
   $status = $jr->ScanJob->PreScanPage->PageState;
   echo "Status: {$status}\n";
 }
  echo "Ready, saving...\n";
  file_put_contents($fname,post(ip . $dlurl,NULL,false));
  echo "Saved to {$fname}\nEnter a new filename for next scan or just press enter to save as 1.jpg 2.jpg 3.jpg etc, ctrl-c to cancel: ";
  $nn = stdin();
  if(strlen($nn) < 1)
  {
    $i = 1;
    $nn = "{$i}.jpg";
    while(file_exists($nn))
    {
      $i++;
      $nn = "{$i}.jpg";
    }
  }
  scan($nn);
}
function busy()
{
  $s = simplexml_load_string(post(ip . "/Scan/Status",NULL,false));
  if($s->ScannerState == "Idle") return false;
  return true;
}
function post($url,$data,$post = true,$head = false,$redir = true)
  {
    $ch = curl_init( $url );
    curl_setopt( $ch, CURLOPT_FOLLOWLOCATION, $redir );
    curl_setopt( $ch, CURLOPT_HEADER, $head );
    curl_setopt( $ch, CURLOPT_RETURNTRANSFER, true );
    if($post)
    {
      curl_setopt($ch,CURLOPT_POST, true);
      curl_setopt($ch,CURLOPT_POSTFIELDS, $data);
    }
    curl_setopt( $ch, CURLOPT_BINARYTRANSFER, true);
    curl_setopt($ch,CURLOPT_TIMEOUT,60*60*24);
    curl_setopt( $ch, CURLOPT_USERAGENT, "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:31.0) Gecko/20100101 Firefox/31.0");
    $restext = curl_exec( $ch );
    curl_close( $ch );
    return $restext;
  }
